plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url "https://maven.nucleoid.xyz/" }
    repositories {
        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "software.bernie.geckolib:geckolib-fabric-${project.geckolib_version}"
    modImplementation "maven.modrinth:yacl:2.2.0-for-1.19.2"
    modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
    modImplementation include("eu.pb4:common-protection-api:${project.protection_api_version}")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    withSourcesJar()
}

jar {
    from("gradle.propertoes") {
        rename { "${it}_${project.archivesBaseName}_${project.minecraft_version}" }
    }
}

publishing {
    publications {
    }
    repositories {
    }
}
loom {
    accessWidenerPath = file("src/main/resources/uselessreptile.accesswidener")
    runs {
        server {
            server()
            vmArg "-Dgeckolib.disable_examples=true"
        }
        client {
            client()
            vmArg "-Dgeckolib.disable_examples=true"
            programArgs "--username", "Nord_Act"
        }
    }
}
